<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__zap_wall_8cpp_source" xml:lang="en-US">
<title>ZapWall.cpp</title>
<indexterm><primary>C:/Zaxxon/src/ZapWall/ZapWall.cpp</primary></indexterm>
Go to the documentation of this file.<programlisting linenumbering="unnumbered"><anchor xml:id="__zap_wall_8cpp_source_1l00001"/>00001 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="__zap_wall_8h">ZapWall.h</link>&quot;</emphasis>
<anchor xml:id="__zap_wall_8cpp_source_1l00002"/>00002 
<anchor xml:id="__zap_wall_8cpp_source_1l00003"/>00003 
<anchor xml:id="__zap_wall_8cpp_source_1l00009"/><link linkend="_class_zap_wall_1a3b02529cde8076102e462dc6b7c6351c">00009</link> <link linkend="_class_zap_wall_1a3b02529cde8076102e462dc6b7c6351c">ZapWall::ZapWall</link>(sf::Texture*&#32;tex,&#32;sf::Vector3f&#32;pos)
<anchor xml:id="__zap_wall_8cpp_source_1l00010"/>00010 {
<anchor xml:id="__zap_wall_8cpp_source_1l00011"/>00011 &#32;&#32;&#32;&#32;<link linkend="_class_entity_1ac3f2dbf1633dd3080b7e2835367170bd">spriteSheet</link>&#32;=&#32;tex;
<anchor xml:id="__zap_wall_8cpp_source_1l00012"/>00012 &#32;&#32;&#32;&#32;startPosition&#32;=&#32;pos;
<anchor xml:id="__zap_wall_8cpp_source_1l00013"/>00013 &#32;&#32;&#32;&#32;<link linkend="_class_entity_1a1783cc856808b2d78c4e46fa9c85a524">setPos</link>(pos);
<anchor xml:id="__zap_wall_8cpp_source_1l00014"/>00014 
<anchor xml:id="__zap_wall_8cpp_source_1l00015"/>00015 &#32;&#32;&#32;&#32;<link linkend="_class_entity_1af83f70f8107d85626fb383599cc0f7ae">sprite</link>-&gt;setTexture(*<link linkend="_class_entity_1ac3f2dbf1633dd3080b7e2835367170bd">spriteSheet</link>);
<anchor xml:id="__zap_wall_8cpp_source_1l00016"/>00016 &#32;&#32;&#32;&#32;<link linkend="_class_entity_1af83f70f8107d85626fb383599cc0f7ae">sprite</link>-&gt;setPosition(<link linkend="__util_8cpp_1a23f3b42650cf34c1fcdd903bb936818c">translateTo2d</link>(sf::Vector3f(pos.x,&#32;pos.y,&#32;pos.z)));
<anchor xml:id="__zap_wall_8cpp_source_1l00017"/>00017 &#32;&#32;&#32;&#32;<link linkend="_class_entity_1af83f70f8107d85626fb383599cc0f7ae">sprite</link>-&gt;setTextureRect(sf::IntRect(199,&#32;63,&#32;35,&#32;35));
<anchor xml:id="__zap_wall_8cpp_source_1l00018"/>00018 }
<anchor xml:id="__zap_wall_8cpp_source_1l00019"/>00019 
<anchor xml:id="__zap_wall_8cpp_source_1l00020"/>00020 
<anchor xml:id="__zap_wall_8cpp_source_1l00026"/><link linkend="_class_zap_wall_1a749a7515b945420293924b3887033d93">00026</link> <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_zap_wall_1a749a7515b945420293924b3887033d93">ZapWall::update</link>(sf::RenderWindow&amp;&#32;window,&#32;<emphasis role="keywordtype">float</emphasis>&#32;gameSpeed)
<anchor xml:id="__zap_wall_8cpp_source_1l00027"/>00027 {
<anchor xml:id="__zap_wall_8cpp_source_1l00028"/>00028 &#32;&#32;&#32;&#32;<emphasis role="comment">//Only&#32;draws&#32;if&#32;on&#32;screen&#32;and&#32;has&#32;delay&#32;so&#32;it&#32;does&#32;not&#32;stop&#32;too&#32;early</emphasis>
<anchor xml:id="__zap_wall_8cpp_source_1l00029"/>00029 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!<link linkend="__util_8cpp_1abb6b320c3e2bc2c09f352e041a9d57e1">getWindowViewRect</link>(window).intersects(<link linkend="_class_entity_1af83f70f8107d85626fb383599cc0f7ae">sprite</link>-&gt;getGlobalBounds()))
<anchor xml:id="__zap_wall_8cpp_source_1l00030"/>00030 &#32;&#32;&#32;&#32;{
<anchor xml:id="__zap_wall_8cpp_source_1l00031"/>00031 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(drawn&#32;==&#32;<emphasis role="keyword">true</emphasis>)
<anchor xml:id="__zap_wall_8cpp_source_1l00032"/>00032 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;offScreenCount++;
<anchor xml:id="__zap_wall_8cpp_source_1l00033"/>00033 
<anchor xml:id="__zap_wall_8cpp_source_1l00034"/>00034 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(offScreenCount&#32;==&#32;15)
<anchor xml:id="__zap_wall_8cpp_source_1l00035"/>00035 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__zap_wall_8cpp_source_1l00036"/>00036 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;offScreenCount&#32;=&#32;15;
<anchor xml:id="__zap_wall_8cpp_source_1l00037"/>00037 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;onScreen&#32;=&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__zap_wall_8cpp_source_1l00038"/>00038 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;drawn&#32;=&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__zap_wall_8cpp_source_1l00039"/>00039 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
<anchor xml:id="__zap_wall_8cpp_source_1l00040"/>00040 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__zap_wall_8cpp_source_1l00041"/>00041 &#32;&#32;&#32;&#32;}
<anchor xml:id="__zap_wall_8cpp_source_1l00042"/>00042 
<anchor xml:id="__zap_wall_8cpp_source_1l00043"/>00043 &#32;&#32;&#32;&#32;onScreen&#32;=&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__zap_wall_8cpp_source_1l00044"/>00044 &#32;&#32;&#32;&#32;drawn&#32;=&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__zap_wall_8cpp_source_1l00045"/>00045 
<anchor xml:id="__zap_wall_8cpp_source_1l00046"/>00046 &#32;&#32;&#32;&#32;window.draw(*<link linkend="_class_entity_1af83f70f8107d85626fb383599cc0f7ae">sprite</link>);
<anchor xml:id="__zap_wall_8cpp_source_1l00047"/>00047 
<anchor xml:id="__zap_wall_8cpp_source_1l00048"/>00048 &#32;&#32;&#32;&#32;<emphasis role="comment">//Movement&#32;every&#32;two&#32;frames</emphasis>
<anchor xml:id="__zap_wall_8cpp_source_1l00049"/>00049 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(count&#32;==&#32;2)
<anchor xml:id="__zap_wall_8cpp_source_1l00050"/>00050 &#32;&#32;&#32;&#32;{
<anchor xml:id="__zap_wall_8cpp_source_1l00051"/>00051 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//If&#32;on&#32;screen,&#32;move&#32;it&#32;over</emphasis>
<anchor xml:id="__zap_wall_8cpp_source_1l00052"/>00052 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_entity_1a17d1b17b5f2c2b7c137ee7b8347358c3">getPos</link>().x&#32;&gt;&#32;-190)
<anchor xml:id="__zap_wall_8cpp_source_1l00053"/>00053 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__zap_wall_8cpp_source_1l00054"/>00054 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_entity_1af83f70f8107d85626fb383599cc0f7ae">sprite</link>-&gt;move(<link linkend="__util_8cpp_1a23f3b42650cf34c1fcdd903bb936818c">translateTo2d</link>(sf::Vector3f(-58,&#32;0,&#32;0)));
<anchor xml:id="__zap_wall_8cpp_source_1l00055"/>00055 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_entity_1a1783cc856808b2d78c4e46fa9c85a524">setPos</link>(sf::Vector3f(<link linkend="_class_entity_1a17d1b17b5f2c2b7c137ee7b8347358c3">getPos</link>().x&#32;-&#32;58,&#32;<link linkend="_class_entity_1a17d1b17b5f2c2b7c137ee7b8347358c3">getPos</link>().y,&#32;<link linkend="_class_entity_1a17d1b17b5f2c2b7c137ee7b8347358c3">getPos</link>().z));
<anchor xml:id="__zap_wall_8cpp_source_1l00056"/>00056 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__zap_wall_8cpp_source_1l00057"/>00057 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//else&#32;it&#32;is&#32;off&#32;screen,&#32;reset&#32;it&#32;to&#32;start&#32;position</emphasis>
<anchor xml:id="__zap_wall_8cpp_source_1l00058"/>00058 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="__zap_wall_8cpp_source_1l00059"/>00059 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__zap_wall_8cpp_source_1l00060"/>00060 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_entity_1af83f70f8107d85626fb383599cc0f7ae">sprite</link>-&gt;setPosition(<link linkend="__util_8cpp_1a23f3b42650cf34c1fcdd903bb936818c">translateTo2d</link>(sf::Vector3f(startPosition)));
<anchor xml:id="__zap_wall_8cpp_source_1l00061"/>00061 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_entity_1a1783cc856808b2d78c4e46fa9c85a524">setPos</link>(startPosition);
<anchor xml:id="__zap_wall_8cpp_source_1l00062"/>00062 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__zap_wall_8cpp_source_1l00063"/>00063 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;count&#32;=&#32;0;
<anchor xml:id="__zap_wall_8cpp_source_1l00064"/>00064 &#32;&#32;&#32;&#32;}
<anchor xml:id="__zap_wall_8cpp_source_1l00065"/>00065 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="__zap_wall_8cpp_source_1l00066"/>00066 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;count++;
<anchor xml:id="__zap_wall_8cpp_source_1l00067"/>00067 }
<anchor xml:id="__zap_wall_8cpp_source_1l00068"/>00068 
<anchor xml:id="__zap_wall_8cpp_source_1l00069"/>00069 
<anchor xml:id="__zap_wall_8cpp_source_1l00073"/><link linkend="_class_zap_wall_1a80af1a48975d457f8bee45eba0c4f416">00073</link> <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_zap_wall_1a80af1a48975d457f8bee45eba0c4f416">ZapWall::setStartPos</link>(sf::Vector3f&#32;pos)
<anchor xml:id="__zap_wall_8cpp_source_1l00074"/>00074 {
<anchor xml:id="__zap_wall_8cpp_source_1l00075"/>00075 &#32;&#32;&#32;&#32;startPosition&#32;=&#32;pos;
<anchor xml:id="__zap_wall_8cpp_source_1l00076"/>00076 }
<anchor xml:id="__zap_wall_8cpp_source_1l00077"/>00077 
<anchor xml:id="__zap_wall_8cpp_source_1l00078"/>00078 
<anchor xml:id="__zap_wall_8cpp_source_1l00083"/><link linkend="_class_zap_wall_1aa8f5edb8998f1dbd276120174c1ca01c">00083</link> <emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_zap_wall_1aa8f5edb8998f1dbd276120174c1ca01c">ZapWall::isOnScreen</link>()
<anchor xml:id="__zap_wall_8cpp_source_1l00084"/>00084 {
<anchor xml:id="__zap_wall_8cpp_source_1l00085"/>00085 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;onScreen;
<anchor xml:id="__zap_wall_8cpp_source_1l00086"/>00086 }
<anchor xml:id="__zap_wall_8cpp_source_1l00087"/>00087 
<anchor xml:id="__zap_wall_8cpp_source_1l00088"/>00088 
<anchor xml:id="__zap_wall_8cpp_source_1l00093"/><link linkend="_class_zap_wall_1a3bc98afa6d68d364ae39838cc70a5ee6">00093</link> sf::Vector3f&#32;<link linkend="_class_zap_wall_1a3bc98afa6d68d364ae39838cc70a5ee6">ZapWall::getStartPosition</link>()
<anchor xml:id="__zap_wall_8cpp_source_1l00094"/>00094 {
<anchor xml:id="__zap_wall_8cpp_source_1l00095"/>00095 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;startPosition;
<anchor xml:id="__zap_wall_8cpp_source_1l00096"/>00096 }
</programlisting></section>
