<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.10.0" xml:lang="en-US">
  <compounddef id="_util_8cpp" kind="file" language="C++">
    <compoundname>Util.cpp</compoundname>
    <includes refid="_util_8h" local="yes">Util.h</includes>
    <incdepgraph>
      <node id="1">
        <label>C:/Zaxxon/src/Util/Util.cpp</label>
        <link refid="_util_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>Util.h</label>
        <link refid="_util_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>SFML/Graphics.hpp</label>
      </node>
    </incdepgraph>
    <sectiondef kind="func">
      <memberdef kind="function" id="_util_8cpp_1a23f3b42650cf34c1fcdd903bb936818c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>sf::Vector2f</type>
        <definition>sf::Vector2f translateTo2d</definition>
        <argsstring>(sf::Vector3f in)</argsstring>
        <name>translateTo2d</name>
        <param>
          <type>sf::Vector3f</type>
          <declname>in</declname>
        </param>
        <briefdescription>
<para>Convert normal 2d coordinates to isometric coordinates. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>in</parametername>
</parameternamelist>
<parameterdescription>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Vector of 2 floats</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Zaxxon/src/Util/Util.cpp" line="9" column="14" bodyfile="C:/Zaxxon/src/Util/Util.cpp" bodystart="9" bodyend="15"/>
      </memberdef>
      <memberdef kind="function" id="_util_8cpp_1abb6b320c3e2bc2c09f352e041a9d57e1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>sf::FloatRect</type>
        <definition>sf::FloatRect getWindowViewRect</definition>
        <argsstring>(sf::RenderWindow &amp;window)</argsstring>
        <name>getWindowViewRect</name>
        <param>
          <type>sf::RenderWindow &amp;</type>
          <declname>window</declname>
        </param>
        <briefdescription>
<para>Easily get the current view rectangle with translations. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>window</parametername>
</parameternamelist>
<parameterdescription>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Float rectangle</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Zaxxon/src/Util/Util.cpp" line="23" column="15" bodyfile="C:/Zaxxon/src/Util/Util.cpp" bodystart="23" bodyend="31"/>
      </memberdef>
      <memberdef kind="function" id="_util_8cpp_1a311270ca6451600ab7089e74945d30b5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool zPressed</definition>
        <argsstring>()</argsstring>
        <name>zPressed</name>
        <briefdescription>
<para>Detects if main button is pressed, automatically gets rid of inputs that are a held key over first press. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>A boolean</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Zaxxon/src/Util/Util.cpp" line="39" column="6" bodyfile="C:/Zaxxon/src/Util/Util.cpp" bodystart="39" bodyend="52"/>
      </memberdef>
      <memberdef kind="function" id="_util_8cpp_1a7ab82b63c0cbae8095033e452b2d2183" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool upPressed</definition>
        <argsstring>()</argsstring>
        <name>upPressed</name>
        <briefdescription>
<para>Detects if up is current pressed, will handle both keyboard and controller. This will consider holding the stick in this direction as constant &apos;presses&apos;. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>A boolean</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Zaxxon/src/Util/Util.cpp" line="60" column="6" bodyfile="C:/Zaxxon/src/Util/Util.cpp" bodystart="60" bodyend="64"/>
      </memberdef>
      <memberdef kind="function" id="_util_8cpp_1a63e332f98a6cbd1cb57f319f556ee594" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool downPressed</definition>
        <argsstring>()</argsstring>
        <name>downPressed</name>
        <briefdescription>
<para>Detects if down is current pressed, will handle both keyboard and controller. This will consider holding the stick in this direction as constant &apos;presses&apos;. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>A boolean</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Zaxxon/src/Util/Util.cpp" line="72" column="6" bodyfile="C:/Zaxxon/src/Util/Util.cpp" bodystart="72" bodyend="76"/>
      </memberdef>
      <memberdef kind="function" id="_util_8cpp_1ae6f4fd7a79c6617ddba5e4bc53033e26" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool leftPressed</definition>
        <argsstring>()</argsstring>
        <name>leftPressed</name>
        <briefdescription>
<para>Detects if left is current pressed, will handle both keyboard and controller. This will consider holding the stick in this direction as constant &apos;presses&apos;. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>A boolean</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Zaxxon/src/Util/Util.cpp" line="84" column="6" bodyfile="C:/Zaxxon/src/Util/Util.cpp" bodystart="84" bodyend="88"/>
      </memberdef>
      <memberdef kind="function" id="_util_8cpp_1af41bb2031bce096d1162c72a1ec3d49c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool rightPressed</definition>
        <argsstring>()</argsstring>
        <name>rightPressed</name>
        <briefdescription>
<para>Detects if right is current pressed, will handle both keyboard and controller. This will consider holding the stick in this direction as constant &apos;presses&apos;. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>A boolean</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Zaxxon/src/Util/Util.cpp" line="96" column="6" bodyfile="C:/Zaxxon/src/Util/Util.cpp" bodystart="96" bodyend="100"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_util_8h" kindref="compound">Util.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="9" refid="_util_8cpp_1a23f3b42650cf34c1fcdd903bb936818c" refkind="member"><highlight class="normal">sf::Vector2f<sp/><ref refid="_util_8cpp_1a23f3b42650cf34c1fcdd903bb936818c" kindref="member">translateTo2d</ref>(sf::Vector3f<sp/>in)</highlight></codeline>
<codeline lineno="10"><highlight class="normal">{</highlight></codeline>
<codeline lineno="11"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>x<sp/>=<sp/>-in.x<sp/>*<sp/>0.6f<sp/>+<sp/>-in.z<sp/>*<sp/>0.6f;</highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>y<sp/>=<sp/>in.y<sp/>+<sp/>-in.x<sp/>*<sp/>0.3f<sp/>+<sp/>in.z<sp/>*<sp/>0.3f;</highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>sf::Vector2f(x,<sp/>y);</highlight></codeline>
<codeline lineno="15"><highlight class="normal">}</highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="23" refid="_util_8cpp_1abb6b320c3e2bc2c09f352e041a9d57e1" refkind="member"><highlight class="normal">sf::FloatRect<sp/><ref refid="_util_8cpp_1abb6b320c3e2bc2c09f352e041a9d57e1" kindref="member">getWindowViewRect</ref>(sf::RenderWindow&amp;<sp/>window)</highlight></codeline>
<codeline lineno="24"><highlight class="normal">{</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>wPos<sp/>=<sp/>sf::Vector2f(window.getView().getCenter().x</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-<sp/>(window.getView().getSize().x<sp/>/<sp/>2),</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>window.getView().getCenter().y<sp/>-<sp/>(window.getView().</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>getSize().y<sp/>/<sp/>2));</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>sf::FloatRect(wPos.x,<sp/>wPos.y,<sp/>window.getView().getSize().x,</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>window.getView().getSize().y);</highlight></codeline>
<codeline lineno="31"><highlight class="normal">}</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="39" refid="_util_8cpp_1a311270ca6451600ab7089e74945d30b5" refkind="member"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="_util_8cpp_1a311270ca6451600ab7089e74945d30b5" kindref="member">zPressed</ref>()</highlight></codeline>
<codeline lineno="40"><highlight class="normal">{</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((sf::Keyboard::isKeyPressed(sf::Keyboard::Z)<sp/>||</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sf::Joystick::isButtonPressed(0,<sp/>0))<sp/>&amp;&amp;<sp/>util_zPress)</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>util_zPress<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!util_zPress<sp/>&amp;&amp;<sp/>!(sf::Keyboard::isKeyPressed(sf::Keyboard::Z)</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>||<sp/>sf::Joystick::isButtonPressed(0,<sp/>0)))</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>util_zPress<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="52"><highlight class="normal">}</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="60" refid="_util_8cpp_1a7ab82b63c0cbae8095033e452b2d2183" refkind="member"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="_util_8cpp_1a7ab82b63c0cbae8095033e452b2d2183" kindref="member">upPressed</ref>()</highlight></codeline>
<codeline lineno="61"><highlight class="normal">{</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>sf::Keyboard::isKeyPressed(sf::Keyboard::Up)<sp/>||</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sf::Joystick::getAxisPosition(0,<sp/>sf::Joystick::Y)<sp/>&lt;<sp/>-10;</highlight></codeline>
<codeline lineno="64"><highlight class="normal">}</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="72" refid="_util_8cpp_1a63e332f98a6cbd1cb57f319f556ee594" refkind="member"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="_util_8cpp_1a63e332f98a6cbd1cb57f319f556ee594" kindref="member">downPressed</ref>()</highlight></codeline>
<codeline lineno="73"><highlight class="normal">{</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>sf::Keyboard::isKeyPressed(sf::Keyboard::Down)<sp/>||</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sf::Joystick::getAxisPosition(0,<sp/>sf::Joystick::Y)<sp/>&gt;<sp/>10;</highlight></codeline>
<codeline lineno="76"><highlight class="normal">}</highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="84" refid="_util_8cpp_1ae6f4fd7a79c6617ddba5e4bc53033e26" refkind="member"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="_util_8cpp_1ae6f4fd7a79c6617ddba5e4bc53033e26" kindref="member">leftPressed</ref>()</highlight></codeline>
<codeline lineno="85"><highlight class="normal">{</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>sf::Keyboard::isKeyPressed(sf::Keyboard::Left)<sp/>||</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sf::Joystick::getAxisPosition(0,<sp/>sf::Joystick::X)<sp/>&lt;<sp/>-10;</highlight></codeline>
<codeline lineno="88"><highlight class="normal">}</highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="96" refid="_util_8cpp_1af41bb2031bce096d1162c72a1ec3d49c" refkind="member"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="_util_8cpp_1af41bb2031bce096d1162c72a1ec3d49c" kindref="member">rightPressed</ref>()</highlight></codeline>
<codeline lineno="97"><highlight class="normal">{</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>sf::Keyboard::isKeyPressed(sf::Keyboard::Right)<sp/>||</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sf::Joystick::getAxisPosition(0,<sp/>sf::Joystick::X)<sp/>&gt;<sp/>10;</highlight></codeline>
<codeline lineno="100"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="C:/Zaxxon/src/Util/Util.cpp"/>
  </compounddef>
</doxygen>
